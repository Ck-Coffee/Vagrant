一.spring管理事务的核心步骤
	
	?~!:必要的步骤：创建连接DataSource -> 配置事务管理器(DataSourceTransactionManager依赖于连接) -> 创建事务模板对象 
	
	<!-- 配置连接 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/test?useSSL=true"></property>
		<property name="username" value="root"></property>
		<property name="password" value="LO164275983017VE"></property>
	</bean>
	
	<!-- 事务核心管理器  封装了事务的所有操作 依赖于连接池-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 事务模板对象 -->
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>
	
	
二.Spring管理事务的方式（在上面三步已完成的前提下）
	
	1.编码式：将核心事务管理器配置到spring容器中，然后通过事务模板类执行，手动创建事务
	例：tt.execute(new TransactionCallbackWithoutResult() {
			protected void doInTransactionWithoutResult(TransactionStatus arg0) {
				//在事务中的操作
			}
	}
	2.xml配置:还需配置通知和切入点，这里采用织入的方式
			<!-- 配置事务通知 -->
			<tx:advice id="txAdvice" transaction-manager="transactionManager">
				<tx:attributes>
					<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"></tx:method>
					<tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"></tx:method>
					<tx:method name="updata*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"></tx:method>
					<tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"></tx:method>
					<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"></tx:method>
					<tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"></tx:method>
					<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"></tx:method>
					<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"></tx:method>
					<tx:method name="tranfer" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"></tx:method>
				</tx:attributes>
			</tx:advice>
			
			
			<!-- aop织入 -->
			<aop:config>
				<!-- 切入点 -->
				<aop:pointcut expression="execution(* com.ck.business.*ServiceImpl.*(..))" id="txPc"/>
				
				<!-- 切入点通知 -->
				<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
			</aop:config>
	
	3.注解配置：
		a).在xml中加上	<tx:annotation-driven/>
		
		b).在需要添加事务的地方配置：
		@Transactional(isolation=Isolation.REPEATABLE_READ,propagation=Propagation.REQUIRED,readOnly=false)