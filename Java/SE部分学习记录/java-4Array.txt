1.数组：用来容纳同一数据类型，大小固定的容器
    特点与作用：装同一数据，大小固定；容纳多个数据，使得代码简单整洁，使用方便
    不足：大小固定，不以扩展

    声明：数据类型[] 数组名;
    创建：new 数类[大小];
	数据类型[] 数组名 = new 数组名[大小]

    数组的大小：数组名.length

    遍历数组：
	for循环，foreach 

    数组的排序：冒泡，选择，插入，快速
    数组的查找：线性查找，二分法查找
   
    数组的拷贝：for循环，System.arrayCopy（原数组，原数组的起始位置，目标数组，目标数组的起始位置，复制的个数）
		Arrays.copyOf（原数组，复制的数据的个数）----此方法返回一个相应类型的数据
	
    二维数组：也是一个容器，只不过里面的元素是一维数组--平面结构
		int[][] arrayInt=new int[][]{{},{},{}};//标准
		int[][] arrayInt={{},{},{}};//常用

2.增强for循环：foreach
    例for（数组类型 名称 ：数组名）
3.Arrays类
4.基本数据类型与引用数据类型的比较：
	  基本			  引用
    存储在栈中  	变量名在栈，对象在堆
    确定的值		对象的引用（虚地址）
          ==		“==”比较的是虚地址，其内容使用equals（obj）；
	传递副本	    传递虚地址

5.值传递：发生在赋值，有参方法的调用；
	基本数据类型：那么传递的是原值的副本（新值变化不影响原值）
	引用数据类型：传递的是原对象的引用（虚地址）--新值变化原值受影响
*注意：包装器类型，以及String都是引用数据类型，但是在发生值传递时，按照基本数据类型处理